name: Node.js Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
      name: Create DotEnv
    - run: |
        touch .env
        echo VITE_APP_API_KEY=${{ secrets.VITE_APP_API_KEY }} >> .env

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache-dependency-path: wildfireagent_frontend/package-lock.json
        cache: 'npm'
    - run: npm ci
      working-directory: wildfireagent_frontend
    - run: npm run build
      working-directory: wildfireagent_frontend

    - run: |
        mkdir build
        cp "./websocket_server.py" "./build/websocket_server.py"
        cp "./requirements.txt" "./build/requirements.txt"
        cp "./prompt.txt" "./build/prompt.txt"
        cp "./helpers.py" "./build/helpers.py"
        cp "./Dockerfile-flask" "./build/Dockerfile-flask"
        cp "./Dockerfile-websockets" "./build/Dockerfile-websockets"
        cp "./app.py" "./build/app.py"
        mv "./models" "./build/models"
        mv "./migrations" "./build/migrations"
        mv "./api" "./build/api"
        mv "./wildfireagent_frontend/dist" "./build/dist"
      
    - name: deploy build
      uses: s0/git-publish-subdir-action@develop
      env:
          REPO: self
          BRANCH: build # The branch name where you want to push the assets
          FOLDER: build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
